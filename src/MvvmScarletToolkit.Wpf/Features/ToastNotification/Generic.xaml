<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
                    xmlns:local="clr-namespace:MvvmScarletToolkit.Wpf">

    <Style x:Key="DefaultToastWindowStyle" TargetType="{x:Type Window}">
        <Setter Property="MinWidth" Value="450" />
        <Setter Property="MaxWidth" Value="450" />
        <Setter Property="AllowsTransparency" Value="True" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="Focusable" Value="False" />
        <Setter Property="ShowActivated" Value="False" />
        <Setter Property="ShowInTaskbar" Value="False" />
        <Setter Property="Topmost" Value="True" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Content">
            <Setter.Value>
                <ContentControl Content="{Binding}" />
            </Setter.Value>
        </Setter>
    </Style>

    <DataTemplate DataType="{x:Type local:ToastService}">
        <ItemsControl Padding="20" ItemsSource="{Binding Items}">
            <ItemsControl.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel />
                </ItemsPanelTemplate>
            </ItemsControl.ItemsPanel>
        </ItemsControl>
    </DataTemplate>

    <DataTemplate DataType="{x:Type local:ToastViewModel}">
        <Grid x:Name="this"
              MinWidth="300"
              MinHeight="100"
              Margin="0,0,0,6"
              RenderTransformOrigin="1.0,0.5">

            <Grid.Triggers>
                <EventTrigger RoutedEvent="Loaded">
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetName="this">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             From="0.3"
                                             To="1"
                                             Duration="0:0:0.25">
                                <DoubleAnimation.EasingFunction>
                                    <CubicEase EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleX)"
                                             From="0"
                                             To="1"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <BackEase Amplitude="0.3" EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                            <DoubleAnimation Storyboard.TargetProperty="RenderTransform.(ScaleTransform.ScaleY)"
                                             From="0"
                                             To="1"
                                             Duration="0:0:0.3">
                                <DoubleAnimation.EasingFunction>
                                    <BackEase Amplitude="0.3" EasingMode="EaseOut" />
                                </DoubleAnimation.EasingFunction>
                            </DoubleAnimation>
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
                <EventTrigger RoutedEvent="Unloaded">
                    <BeginStoryboard>
                        <Storyboard Storyboard.TargetName="this">
                            <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                             From="1"
                                             To="0"
                                             Duration="0:0:0.25" />
                        </Storyboard>
                    </BeginStoryboard>
                </EventTrigger>
            </Grid.Triggers>

            <Grid.RenderTransform>
                <ScaleTransform />
            </Grid.RenderTransform>

            <i:Interaction.Triggers>
                <i:EventTrigger EventName="Loaded">
                    <i:InvokeCommandAction Command="{Binding BeginDismissCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>

            <Border BorderThickness="0">
                <Border.Style>
                    <Style TargetType="{x:Type Border}">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding ToastType}" Value="0">
                                <Setter Property="Background" Value="Black" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ToastType}" Value="1">
                                <Setter Property="Background" Value="Green" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ToastType}" Value="2">
                                <Setter Property="Background" Value="Red" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ToastType}" Value="4">
                                <Setter Property="Background" Value="Orange" />
                            </DataTrigger>

                            <DataTrigger Binding="{Binding ToastType}" Value="8">
                                <Setter Property="Background" Value="Gray" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </Border.Style>

                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*" />
                        <ColumnDefinition Width="Auto" />
                        <ColumnDefinition Width="Auto" />
                    </Grid.ColumnDefinitions>

                    <StackPanel Grid.Column="0"
                                Margin="15"
                                VerticalAlignment="Center"
                                TextBlock.FontFamily="Calibri">
                        <TextBlock FontSize="26"
                                   FontWeight="Bold"
                                   Foreground="White"
                                   Text="{Binding Title}"
                                   TextWrapping="Wrap" />
                        <TextBlock Margin="0,3,0,0"
                                   FontSize="19"
                                   Foreground="White"
                                   Text="{Binding Body}"
                                   TextWrapping="Wrap" />
                    </StackPanel>

                    <Button Grid.Column="1"
                            Margin="3"
                            Padding="10,5"
                            Background="Transparent"
                            BorderThickness="0"
                            Command="{Binding DismissCommand}"
                            Content="X"
                            Cursor="Hand">
                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                                                <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                            </Style>
                        </Button.Style>
                    </Button>
                </Grid>
            </Border>
        </Grid>
    </DataTemplate>
</ResourceDictionary>
