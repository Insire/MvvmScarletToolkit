<Application x:Class="MvvmScarletToolkit.Wpf.Samples.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:mvvm="http://SoftThorn.MvvmScarletToolkit.com/winfx/xaml/shared"
             xmlns:xf="clr-namespace:XamlFlair;assembly=XamlFlair.WPF"
             xmlns:xfc="clr-namespace:XamlFlair.Controls;assembly=XamlFlair.WPF">

    <Application.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/MvvmScarletToolkit.Wpf;component/Features/FileSystemBrowser/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/MvvmScarletToolkit.Wpf;component/Features/ToastNotification/Generic.xaml" />
                <ResourceDictionary Source="pack://application:,,,/XamlFlair.WPF;component/DefaultAnimations.xaml" />
            </ResourceDictionary.MergedDictionaries>

            <DataTemplate DataType="{x:Type mvvm:ToastViewModel}">
                <Grid x:Name="this"
                      MinWidth="300"
                      MinHeight="100"
                      xf:Animations.Primary="{xf:Animate BasedOn={StaticResource ScaleFromRight},
                                                         Event=Loaded}"
                      xf:Animations.Secondary="{xf:Animate BasedOn={StaticResource ScaleToRight},
                                                           Event=None}"
                      xf:Animations.SecondaryBinding="{Binding IsRemoving}">

                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="Loaded">
                            <i:InvokeCommandAction Command="{Binding BeginDismissCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>

                    <Border BorderThickness="0">
                        <Border.Style>
                            <Style TargetType="{x:Type Border}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ToastType}" Value="0">
                                        <Setter Property="Background" Value="Black" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding ToastType}" Value="1">
                                        <Setter Property="Background" Value="Green" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding ToastType}" Value="2">
                                        <Setter Property="Background" Value="Red" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding ToastType}" Value="4">
                                        <Setter Property="Background" Value="Orange" />
                                    </DataTrigger>

                                    <DataTrigger Binding="{Binding ToastType}" Value="8">
                                        <Setter Property="Background" Value="Gray" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Border.Style>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="Auto" />
                            </Grid.ColumnDefinitions>

                            <StackPanel Grid.Column="0"
                                        Margin="15"
                                        VerticalAlignment="Center"
                                        TextBlock.FontFamily="Calibri">
                                <TextBlock FontSize="26"
                                           FontWeight="Bold"
                                           Foreground="White"
                                           Text="{Binding Title}"
                                           TextWrapping="Wrap" />
                                <TextBlock Margin="0,3,0,0"
                                           FontSize="19"
                                           Foreground="White"
                                           Text="{Binding Body}"
                                           TextWrapping="Wrap" />
                            </StackPanel>

                            <Button Grid.Column="1"
                                    Margin="3"
                                    Padding="10,5"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Command="{Binding DismissCommand}"
                                    Content="X"
                                    Cursor="Hand">
                                <Button.Style>
                                    <Style TargetType="Button">
                                        <Setter Property="Template">
                                            <Setter.Value>
                                                <ControlTemplate TargetType="Button">
                                                    <Border Padding="{TemplateBinding Padding}" Background="{TemplateBinding Background}">
                                                        <ContentPresenter HorizontalAlignment="Center" VerticalAlignment="Center" />
                                                    </Border>
                                                </ControlTemplate>
                                            </Setter.Value>
                                        </Setter>
                                    </Style>
                                </Button.Style>
                            </Button>
                        </Grid>
                    </Border>
                </Grid>
            </DataTemplate>

            <DataTemplate DataType="{x:Type mvvm:ToastService}">
                <DataTemplate.Resources>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="HorizontalContentAlignment" Value="Stretch" />
                    </Style>
                </DataTemplate.Resources>
                <xfc:AnimatedListBox Padding="8"
                                     HorizontalAlignment="Stretch"
                                     xf:Animations.AnimateOnItemsSourceChange="True"
                                     xf:Animations.InterElementDelay="50"
                                     Background="Transparent"
                                     BorderBrush="Transparent"
                                     ItemsSource="{Binding Items}"
                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                     SelectionMode="Single" />
            </DataTemplate>
        </ResourceDictionary>
    </Application.Resources>
</Application>
