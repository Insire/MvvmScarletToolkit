<Window x:Class="MvvmScarletToolkit.Wpf.Samples.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:componentmodel="clr-namespace:System.ComponentModel;assembly=WindowsBase"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        xmlns:incubator="clr-namespace:MvvmScarletToolkit;assembly=MvvmScarletToolkit.Incubator"
        xmlns:local="clr-namespace:MvvmScarletToolkit.Wpf.Samples"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:mvvm="http://SoftThorn.MvvmScarletToolkit.com/winfx/xaml/shared"
        xmlns:observables="clr-namespace:MvvmScarletToolkit.Observables;assembly=MvvmScarletToolkit.Observables"
        xmlns:system="clr-namespace:System;assembly=System.Runtime"
        Name="MainWindowRoot"
        Title="MvvmScarletToolkit.Wpf.Samples"
        Width="1025"
        Height="350"
        d:DataContext="{d:DesignInstance Type=local:NavigationViewModel}"
        mc:Ignorable="d">

    <!--  DataContext: NavigationViewModel  -->

    <Grid>
        <Grid.Resources>
            <mvvm:BindingProxy x:Key="MainWindowRootProxy" Data="{Binding ElementName=MainWindowRoot}" />
            <system:Decimal x:Key="Num">2</system:Decimal>
            <mvvm:NullValueConverter x:Key="NullValueConverter" />
            <DataTemplate DataType="{x:Type observables:LocalizationViewModel}">
                <TextBlock Text="{Binding Value, Mode=OneWay}" />
            </DataTemplate>
        </Grid.Resources>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="Auto" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <StatusBar Grid.Row="1">
            <StatusBarItem>
                <TextBlock Text="{Binding Data.Tracker, Source={StaticResource MainWindowRootProxy}}" />
            </StatusBarItem>

            <StatusBarItem>
                <TextBlock Text="{Binding Tracker, RelativeSource={RelativeSource AncestorType={x:Type local:MainWindow}}}" />
            </StatusBarItem>
        </StatusBar>

        <DockPanel Grid.Column="0">
            <ListBox x:Name="Scenes"
                     BorderThickness="0"
                     ItemsSource="{Binding Items}"
                     ScrollViewer.HorizontalScrollBarVisibility="Auto"
                     ScrollViewer.VerticalScrollBarVisibility="Auto"
                     SelectionMode="Single">
                <ListBox.ItemContainerStyle>
                    <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="{x:Type ListBoxItem}">
                        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                        <Setter Property="ToolTip">
                            <Setter.Value>
                                <ToolTip DataContext="{Binding RelativeSource={RelativeSource Self}, Path=PlacementTarget.DataContext, Converter={mvvm:DebugConverter}, ConverterParameter={StaticResource Num}}">
                                    <TextBlock>
                                        <Run Text="Translated Value:" />
                                        <Run Text="{Binding Localization.Value, Mode=OneWay}" />
                                    </TextBlock>
                                </ToolTip>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>

                <ListBox.ItemTemplate>
                    <DataTemplate DataType="{x:Type observables:Scene}">
                        <StackPanel Orientation="Horizontal">
                            <TextBlock Margin="0,0,4,0" Text="{Binding Sequence}" />
                            <ContentControl Content="{Binding Localization}" />
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DockPanel>

        <GridSplitter Grid.Column="1"
                      Width="5"
                      HorizontalAlignment="Center"
                      VerticalAlignment="Stretch" />

        <!--  fill a contentcontrol with the content from the selected scene  -->
        <ContentControl Grid.Column="2"
                        Margin="4,0"
                        Content="{Binding ElementName=Scenes, Path=SelectedItem.Content, Converter={mvvm:DebugConverter}}">
            <ContentControl.Resources>

                <DataTemplate DataType="{x:Type local:ProcessViewModel}">
                    <Grid>
                        <Grid.Resources>
                            <mvvm:BindingProxy x:Key="OutputProxy" Data="{Binding Output}" />
                            <mvvm:BindingProxy x:Key="ErrorsProxy" Data="{Binding Errors}" />

                            <CompositeCollection x:Key="CompositeCollection">
                                <CollectionContainer Collection="{Binding Data, Source={StaticResource OutputProxy}}" />
                                <CollectionContainer Collection="{Binding Data, Source={StaticResource ErrorsProxy}}" />
                            </CompositeCollection>
                        </Grid.Resources>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="8" />
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="8" />
                            <ColumnDefinition Width="Auto" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="8" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="8" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="8" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="8" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="8" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="8" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <TextBlock Grid.Row="0" Text="FilePath" />
                        <TextBlock Grid.Row="2" Text="Args" />
                        <TextBlock Grid.Row="4" Text="WorkingDirectory" />

                        <TextBox Grid.Row="0"
                                 Grid.Column="2"
                                 Text="{Binding FilePath}" />
                        <TextBox Grid.Row="2"
                                 Grid.Column="2"
                                 Text="{Binding Args}" />
                        <TextBox Grid.Row="4"
                                 Grid.Column="2"
                                 Text="{Binding WorkingDirectory}" />

                        <Button Grid.Row="0"
                                Grid.Column="4"
                                Content="Select" />

                        <Button Grid.Row="6"
                                Grid.Column="4"
                                Command="{Binding StartCommand}"
                                Content="Run" />

                        <TextBlock Grid.Row="6"
                                   Grid.Column="0"
                                   Text="Output" />
                        <TextBlock Grid.Row="6"
                                   Grid.Column="2"
                                   Text="Errors" />

                        <ScrollViewer Grid.Row="8"
                                      Grid.Column="0"
                                      HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto">
                            <ItemsControl ItemsSource="{Binding Output}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type local:ProcessData}">
                                        <TextBlock>
                                            <Run Foreground="LightGray" Text="{Binding TimeStamp, Mode=OneWay}" />
                                            <Run Text="{Binding Message, Mode=OneWay}" />
                                        </TextBlock>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>

                        <ScrollViewer Grid.Row="8"
                                      Grid.Column="2"
                                      HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto">
                            <ItemsControl ItemsSource="{Binding Errors}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type local:ProcessErrorData}">
                                        <TextBlock TextWrapping="Wrap">
                                            <Run Foreground="LightGray" Text="{Binding TimeStamp, Mode=OneWay}" />
                                            <Run Text="{Binding Message, Mode=OneWay}" />
                                        </TextBlock>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>

                        <TextBlock Grid.Row="10"
                                   Grid.Column="0"
                                   Text="All Output" />

                        <ScrollViewer Grid.Row="12"
                                      Grid.Column="0"
                                      Grid.ColumnSpan="3"
                                      HorizontalScrollBarVisibility="Auto"
                                      VerticalScrollBarVisibility="Auto">
                            <ItemsControl ItemsSource="{Binding Source={StaticResource CompositeCollection}}">
                                <ItemsControl.Resources>
                                    <DataTemplate DataType="{x:Type local:ProcessData}">
                                        <TextBlock Foreground="Blue">
                                            <Run Foreground="LightGray" Text="{Binding TimeStamp, Mode=OneWay}" />
                                            <Run Text="{Binding Message, Mode=OneWay}" />
                                        </TextBlock>
                                    </DataTemplate>
                                    <DataTemplate DataType="{x:Type local:ProcessErrorData}">
                                        <TextBlock Foreground="Red" TextWrapping="Wrap">
                                            <Run Foreground="LightGray" Text="{Binding TimeStamp, Mode=OneWay}" />
                                            <Run Text="{Binding Message, Mode=OneWay}" />
                                        </TextBlock>
                                    </DataTemplate>
                                </ItemsControl.Resources>
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <VirtualizingStackPanel />
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                            </ItemsControl>
                        </ScrollViewer>
                    </Grid>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:ValidationViewModels}">
                    <DockPanel>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Loaded">
                                <i:InvokeCommandAction Command="{Binding LoadCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <ScrollViewer>

                            <ItemsControl ItemsSource="{Binding Items}">
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type local:DataGridRowValidationViewModel}">
                                        <DockPanel Margin="0,8">
                                            <DockPanel.Resources>
                                                <ControlTemplate x:Key="validationTemplate">
                                                    <DockPanel>
                                                        <TextBlock FontWeight="Bold" Foreground="Red">!</TextBlock>
                                                        <AdornedElementPlaceholder />
                                                    </DockPanel>
                                                </ControlTemplate>

                                                <Style TargetType="{x:Type TextBox}">
                                                    <Setter Property="Validation.ErrorTemplate" Value="{StaticResource validationTemplate}" />
                                                    <Style.Triggers>
                                                        <Trigger Property="Validation.HasError" Value="true">
                                                            <Setter Property="ToolTip" Value="{Binding RelativeSource={x:Static RelativeSource.Self}, Path=(Validation.Errors)/ErrorContent}" />
                                                        </Trigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </DockPanel.Resources>

                                            <TextBlock Margin="0,0,8,0"
                                                       DockPanel.Dock="Left"
                                                       Text="Color:" />

                                            <TextBox Text="{Binding Color, Mode=OneWay, ValidatesOnNotifyDataErrors=True, ValidatesOnDataErrors=True}" />
                                        </DockPanel>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </ScrollViewer>
                    </DockPanel>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:EnumViewModel}">
                    <DockPanel>
                        <StackPanel VerticalAlignment="Center"
                                    DockPanel.Dock="Left"
                                    Orientation="Vertical">
                            <RadioButton Content="None" IsChecked="{Binding Value, Converter={mvvm:RadioButtonCheckedConverter}, ConverterParameter={x:Static local:ViewModelEnum.None}}" />
                            <RadioButton Content="AnotherValue" IsChecked="{Binding Value, Converter={mvvm:RadioButtonCheckedConverter}, ConverterParameter={x:Static local:ViewModelEnum.AnotherValue}}" />
                            <RadioButton Content="SomeValue" IsChecked="{Binding Value, Converter={mvvm:RadioButtonCheckedConverter}, ConverterParameter={x:Static local:ViewModelEnum.SomeValue}}" />
                        </StackPanel>
                        <Border HorizontalAlignment="Center"
                                VerticalAlignment="Center"
                                BorderBrush="Black"
                                BorderThickness="1">
                            <TextBlock Text="{Binding Value}" />
                        </Border>
                    </DockPanel>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:ContextMenuViewModels}">
                    <Grid Background="DarkGray">
                        <Grid.ContextMenu>
                            <ContextMenu ItemsSource="{Binding Items}">
                                <ContextMenu.ItemTemplate>
                                    <HierarchicalDataTemplate DataType="{x:Type local:ContextMenuViewModel}" ItemsSource="{Binding Items}">
                                        <MenuItem Header="{Binding Name}" />
                                    </HierarchicalDataTemplate>
                                </ContextMenu.ItemTemplate>
                            </ContextMenu>
                        </Grid.ContextMenu>
                    </Grid>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:SyncViewModel}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition />
                            <ColumnDefinition />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition />
                            <RowDefinition />
                            <RowDefinition />
                        </Grid.RowDefinitions>
                        <StackPanel Grid.Row="1" Grid.Column="1">
                            <TextBox x:Name="LocalTextBox" Text="test" />
                            <Button Command="{Binding WorkCommand}"
                                    CommandParameter="{Binding Text, ElementName=LocalTextBox}"
                                    Content="Work" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:VirtualizationViewModel}">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="2*" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="*" />
                            <RowDefinition Height="4" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="4" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <ListBox ItemsSource="{Binding LogItems.Items}"
                                 SelectedItem="{Binding LogItems.SelectedItem}"
                                 SelectionMode="Extended"
                                 VirtualizingStackPanel.IsVirtualizing="True"
                                 VirtualizingStackPanel.VirtualizationMode="Standard">

                            <i:Interaction.Behaviors>
                                <mvvm:MultiSelectionBehavior SelectedItems="{Binding LogItems.SelectedItems}" />
                            </i:Interaction.Behaviors>

                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Loaded">
                                    <i:InvokeCommandAction Command="{Binding LogItems.LoadCommand}" />
                                </i:EventTrigger>
                                <i:EventTrigger EventName="Unloaded">
                                    <i:InvokeCommandAction Command="{Binding LogItems.UnloadCommand}" />
                                </i:EventTrigger>
                            </i:Interaction.Triggers>

                            <ListBox.ItemContainerStyle>
                                <Style BasedOn="{StaticResource {x:Type ListBoxItem}}" TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="IsSelected" Value="{Binding IsSelected, Mode=TwoWay}" />
                                </Style>
                            </ListBox.ItemContainerStyle>

                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <Grid Grid.IsSharedSizeScope="True">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Col1" />
                                            <ColumnDefinition Width="*" MinWidth="4" />
                                            <ColumnDefinition Width="Auto" SharedSizeGroup="Col2" />
                                        </Grid.ColumnDefinitions>

                                        <TextBlock Grid.Column="0" Text="{Binding CreatedOn}" />
                                        <TextBlock Grid.Column="2" Text="{Binding Message}" />

                                        <i:Interaction.Triggers>
                                            <i:EventTrigger EventName="Loaded">
                                                <i:InvokeCommandAction Command="{Binding LoadCommand}" />
                                            </i:EventTrigger>
                                            <i:EventTrigger EventName="Unloaded">
                                                <i:InvokeCommandAction Command="{Binding UnloadCommand}" />
                                            </i:EventTrigger>
                                        </i:Interaction.Triggers>
                                    </Grid>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>

                        <ItemsControl Grid.Column="2" ItemsSource="{Binding LogItems.Items}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <WrapPanel />
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>

                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type local:LogItem}">
                                    <Rectangle Width="10"
                                               Height="10"
                                               Margin="1">
                                        <Rectangle.Style>
                                            <Style TargetType="{x:Type Rectangle}">
                                                <Setter Property="Fill" Value="Gray" />
                                                <Setter Property="ToolTip" Value="Not Loaded" />
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsLoaded}" Value="True">
                                                        <Setter Property="Fill" Value="Green" />
                                                        <Setter Property="ToolTip" Value="Loaded" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsBusy}" Value="True">
                                                        <Setter Property="Fill" Value="Red" />
                                                        <Setter Property="ToolTip" Value="Busy" />
                                                    </DataTrigger>
                                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                        <Setter Property="Fill" Value="Blue" />
                                                        <Setter Property="ToolTip">
                                                            <Setter.Value>
                                                                <ToolTip>
                                                                    <TextBlock>
                                                                        <Run Text="{Binding IsLoaded, StringFormat={}IsLoaded: {0}, Mode=OneWay}" />
                                                                        <LineBreak />
                                                                        <Run Text="{Binding IsBusy, StringFormat={}IsBusy: {0}, Mode=OneWay}" />
                                                                        <LineBreak />
                                                                        <Run Text="{Binding IsActive, StringFormat={}IsActive: {0}, Mode=OneWay}" />
                                                                    </TextBlock>
                                                                </ToolTip>
                                                            </Setter.Value>
                                                        </Setter>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Rectangle.Style>
                                    </Rectangle>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>

                        <StackPanel Grid.Row="2" Orientation="Horizontal">
                            <Button Margin="0,0,4,0"
                                    Command="{Binding LogItems.AddCommand}"
                                    Content="New" />

                            <Button Command="{Binding LogItems.RemoveRangeCommand}" Content="Remove" />

                            <Button Margin="4,0"
                                    Command="{Binding LogItems.RefreshCommand}"
                                    Content="Refresh" />

                            <Button Command="{Binding LogItems.ClearCommand}" Content="Clear" />

                            <Button Margin="4,0"
                                    Command="{Binding AddRangeCommand}"
                                    Content="AddRange" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:DataGridRowViewModel}">
                    <ScrollViewer VerticalScrollBarVisibility="Auto">
                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="Auto" />
                                <ColumnDefinition Width="*" />
                            </Grid.ColumnDefinitions>
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="4" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="4" />
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="4" />
                                <RowDefinition Height="Auto" />
                            </Grid.RowDefinitions>

                            <TextBlock Text="IsSelected" />
                            <CheckBox Grid.Column="2"
                                      Grid.ColumnSpan="4"
                                      IsChecked="{Binding IsSelected}" />

                            <TextBlock Grid.Row="2" Text="Color" />
                            <TextBox Grid.Row="2"
                                     Grid.Column="2"
                                     VerticalAlignment="Top"
                                     Text="{Binding Color}" />
                            <Rectangle Grid.Row="2"
                                       Grid.Column="4"
                                       Fill="{Binding Color}" />

                            <TextBlock Grid.Row="4" Text="Name" />
                            <TextBox Grid.Row="4"
                                     Grid.Column="2"
                                     Grid.ColumnSpan="4"
                                     VerticalAlignment="Top"
                                     Text="{Binding Name}" />

                            <TextBlock Grid.Row="6" Text="CreatedOn" />
                            <Calendar Grid.Row="6"
                                      Grid.Column="2"
                                      DisplayDate="{Binding CreatedOn}"
                                      DisplayMode="Month" />

                            <TextBlock Grid.Row="6"
                                       Grid.Column="3"
                                       Text="UpdatedOn" />
                            <Calendar Grid.Row="6"
                                      Grid.Column="4"
                                      DisplayDate="{Binding UpdatedOn, Mode=OneWay}"
                                      DisplayMode="Month" />
                        </Grid>
                    </ScrollViewer>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:DataGridViewModel}">
                    <Grid>
                        <Grid.Resources>
                            <mvvm:BindingProxy x:Key="DataContextProxy" Data="{Binding Groups}" />
                        </Grid.Resources>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Loaded">
                                <i:InvokeCommandAction Command="{Binding LoadCommand}" />
                                <i:InvokeCommandAction Command="{Binding Groups.LoadCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unloaded">
                                <i:InvokeCommandAction Command="{Binding Groups.UnloadCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="4" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="4" />
                            <RowDefinition Height="2*" />
                            <RowDefinition Height="4" />
                            <RowDefinition Height="*" />
                            <RowDefinition Height="4" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="4" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <TextBox Text="{Binding FilterText, UpdateSourceTrigger=PropertyChanged, Delay=500}" />

                        <ContentControl Grid.Row="2">
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <ItemsControl ItemsSource="{Binding Groups.Items}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate DataType="{x:Type mvvm:GroupsViewModel}">
                                                        <Border Margin="0,0,8,0"
                                                                Padding="4"
                                                                Background="#FCFCFC"
                                                                BorderBrush="#EEE"
                                                                BorderThickness="1">

                                                            <DockPanel MinWidth="150">
                                                                <Button Width="30"
                                                                        Height="30"
                                                                        Margin="0,0,8,0"
                                                                        Command="{Binding Data.RemoveCommand, Source={StaticResource DataContextProxy}}"
                                                                        CommandParameter="{Binding}"
                                                                        Content="-"
                                                                        DockPanel.Dock="Left"
                                                                        ToolTip="Remove" />

                                                                <Button Width="30"
                                                                        Height="30"
                                                                        Margin="8,0,0,0"
                                                                        Command="{Binding Data.AddCommand, Source={StaticResource DataContextProxy}}"
                                                                        Content="+"
                                                                        DockPanel.Dock="Right"
                                                                        ToolTip="Add" />

                                                                <ComboBox Height="30"
                                                                          VerticalContentAlignment="Center"
                                                                          ItemsSource="{Binding Items}"
                                                                          SelectedItem="{Binding SelectedItem}">
                                                                    <ComboBox.ItemTemplate>
                                                                        <DataTemplate DataType="{x:Type mvvm:GroupViewModel}">
                                                                            <TextBlock Text="{Binding Name}" />
                                                                        </DataTemplate>
                                                                    </ComboBox.ItemTemplate>
                                                                </ComboBox>
                                                            </DockPanel>
                                                        </Border>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <StackPanel Orientation="Horizontal" />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ItemsControl>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Groups.Count}" Value="0">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Button Width="30"
                                                            Height="30"
                                                            Padding="4"
                                                            HorizontalAlignment="Left"
                                                            VerticalAlignment="Center"
                                                            Command="{Binding Groups.AddCommand}"
                                                            Content="+"
                                                            ToolTip="Add" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>

                        <DataGrid Grid.Row="4"
                                  mvvm:Filter.By="{Binding Filter, Mode=OneWay}"
                                  mvvm:Filter.RefreshWhenChanged="{Binding FilterText, Mode=OneWay}"
                                  AutoGenerateColumns="False"
                                  IsReadOnly="True"
                                  ItemsSource="{Binding Items}"
                                  SelectedItem="{Binding SelectedItem}">
                            <DataGrid.GroupStyle>
                                <GroupStyle>
                                    <GroupStyle.ContainerStyle>
                                        <Style TargetType="{x:Type GroupItem}">
                                            <Setter Property="Template">
                                                <Setter.Value>
                                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                                        <DockPanel>
                                                            <StackPanel Height="30"
                                                                        DockPanel.Dock="Top"
                                                                        Orientation="Horizontal">
                                                                <TextBlock Margin="8,0,0,0" VerticalAlignment="Center">
                                                                    <Run FontSize="16"
                                                                         FontWeight="DemiBold"
                                                                         Text="{Binding Name, Mode=OneWay}" />
                                                                    <Run Text="{Binding ItemCount, StringFormat=Count: {0}, Mode=OneWay}" />
                                                                </TextBlock>
                                                            </StackPanel>
                                                            <ItemsPresenter />
                                                        </DockPanel>
                                                    </ControlTemplate>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </GroupStyle.ContainerStyle>
                                </GroupStyle>
                            </DataGrid.GroupStyle>
                            <DataGrid.Columns>
                                <DataGridCheckBoxColumn Binding="{Binding IsSelected, Mode=TwoWay}" Header="IsSelected" />
                                <DataGridTextColumn Width="*"
                                                    Binding="{Binding Name}"
                                                    Header="Name" />
                                <DataGridTextColumn Binding="{Binding Color}" Header="Color" />
                                <DataGridTextColumn Binding="{Binding CreatedOn}" Header="CreatedOn" />
                                <DataGridTextColumn Binding="{Binding UpdatedOn}" Header="UpdatedOn" />
                            </DataGrid.Columns>
                        </DataGrid>

                        <GridSplitter Grid.Row="5" HorizontalAlignment="Stretch" />

                        <ContentControl Grid.Row="6" Content="{Binding SelectedItem}" />

                        <StackPanel Grid.Row="8" Orientation="Horizontal">
                            <ToggleButton Height="30"
                                          Padding="8,0"
                                          Content="Live grouping"
                                          IsChecked="{Binding Groups.IsLiveGroupingEnabled}" />

                            <ToggleButton Height="30"
                                          Margin="8,0"
                                          Padding="8,0"
                                          Content="Live sorting"
                                          IsChecked="{Binding Groups.IsLiveSortingEnabled}" />
                        </StackPanel>
                    </Grid>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:AsyncStateListViewModel}">
                    <DockPanel>
                        <DockPanel.Resources>
                            <CollectionViewSource x:Key="SortedViewSource"
                                                  IsLiveSortingRequested="True"
                                                  Source="{Binding SelectedItems}">
                                <CollectionViewSource.SortDescriptions>
                                    <componentmodel:SortDescription Direction="Descending" PropertyName="IsSelected" />
                                    <componentmodel:SortDescription Direction="Ascending" PropertyName="DisplayName" />
                                </CollectionViewSource.SortDescriptions>
                            </CollectionViewSource>

                            <DataTemplate x:Key="DemoItemTemplate" DataType="{x:Type local:AsyncStateViewModel}">
                                <StackPanel Orientation="Horizontal">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Loaded">
                                            <i:InvokeCommandAction Command="{Binding LoadCommand}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Button Margin="5"
                                            Command="{Binding LoadCommand}"
                                            Content="Load"
                                            ToolTip="Load" />
                                    <Button Margin="5"
                                            Command="{Binding RefreshCommand}"
                                            Content="Refresh"
                                            ToolTip="Refresh" />
                                    <Button Margin="5"
                                            Command="{Binding RefreshCommand.CancelCommand}"
                                            Content="Cancel"
                                            ToolTip="Cancel" />
                                    <TextBlock VerticalAlignment="Center" Text="{Binding DisplayName}">
                                        <TextBlock.Style>
                                            <Style TargetType="{x:Type TextBlock}">
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding IsBusy}" Value="True">
                                                        <Setter Property="Foreground" Value="Red" />
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </TextBlock.Style>
                                    </TextBlock>
                                </StackPanel>
                            </DataTemplate>
                        </DockPanel.Resources>

                        <Grid>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="4" />
                                <ColumnDefinition Width="*" />
                                <ColumnDefinition Width="4" />
                            </Grid.ColumnDefinitions>

                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto" />
                                <RowDefinition Height="4" />
                                <RowDefinition Height="*" />
                                <RowDefinition Height="4" />
                                <RowDefinition Height="*" />
                            </Grid.RowDefinitions>

                            <TextBox x:Name="FilterTextBox"
                                     Grid.Column="0"
                                     Grid.ColumnSpan="3"
                                     Text="{Binding FilterText}">
                                <i:Interaction.Behaviors>
                                    <mvvm:WatermarkBehavior Watermark="Filter">
                                        <mvvm:WatermarkBehavior.WatermarkStyle>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="Foreground" Value="Gray" />
                                            </Style>
                                        </mvvm:WatermarkBehavior.WatermarkStyle>
                                    </mvvm:WatermarkBehavior>
                                </i:Interaction.Behaviors>
                            </TextBox>

                            <Button Grid.Row="0"
                                    Grid.Column="1"
                                    Grid.ColumnSpan="3"
                                    Margin="0,0,4,0"
                                    Padding="4,0"
                                    HorizontalAlignment="Right"
                                    Background="Transparent"
                                    BorderThickness="0"
                                    Content="X"
                                    ToolTip="Clear">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="Click">
                                        <mvvm:ClearTextBoxAction Target="{Binding ElementName=FilterTextBox}" />
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <Button.Style>
                                    <Style TargetType="{x:Type Button}">
                                        <Setter Property="Visibility" Value="Visible" />
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding Text, ElementName=FilterTextBox}" Value="">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                            <DataTrigger Binding="{Binding Text, ElementName=FilterTextBox}" Value="{x:Null}">
                                                <Setter Property="Visibility" Value="Hidden" />
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </Button.Style>
                            </Button>



                            <ListBox Grid.Row="2"
                                     Grid.RowSpan="3"
                                     Grid.Column="0"
                                     ItemTemplate="{StaticResource DemoItemTemplate}"
                                     ItemsSource="{Binding Items}"
                                     SelectedItem="{Binding SelectedItem}"
                                     SelectionMode="Extended">
                                <i:Interaction.Behaviors>
                                    <mvvm:MultiSelectionBehavior SelectedItems="{Binding SelectedItems}" />
                                </i:Interaction.Behaviors>
                                <ListBox.ItemContainerStyle>
                                    <Style TargetType="{x:Type ListBoxItem}">
                                        <Setter Property="IsSelected" Value="{Binding IsSelected}" />
                                    </Style>
                                </ListBox.ItemContainerStyle>
                            </ListBox>

                            <TextBlock Grid.Row="2"
                                       Grid.RowSpan="3"
                                       Grid.Column="0"
                                       Margin="0,0,25,00"
                                       HorizontalAlignment="Right"
                                       VerticalAlignment="Bottom"
                                       Text="{Binding SelectedItems.Count, StringFormat='{}{0} Entries selected'}" />

                            <ScrollViewer Grid.Row="2"
                                          Grid.Column="2"
                                          VerticalScrollBarVisibility="Auto">
                                <ItemsControl ItemTemplate="{StaticResource DemoItemTemplate}" ItemsSource="{Binding Source={StaticResource SortedViewSource}}" />
                            </ScrollViewer>

                            <ContentControl Grid.Row="4"
                                            Grid.Column="2"
                                            Content="{Binding SelectedItem}">
                                <ContentControl.ContentTemplate>
                                    <DataTemplate DataType="{x:Type local:AsyncStateViewModel}">
                                        <Border BorderBrush="Black" BorderThickness="0.5">

                                            <StackPanel Orientation="Vertical">
                                                <TextBlock Text="{Binding DisplayName, StringFormat={}DisplayName: {0}}" />
                                                <TextBlock Text="{Binding IsBusy, StringFormat={}IsSelfBusy: {0}}" />
                                                <TextBlock Text="{Binding IsSelected, StringFormat={}IsSelected: {0}}" />
                                                <TextBlock Text="{Binding RefreshCommand.IsBusy, StringFormat={}IsRefreshCommandBusy: {0}}" />
                                                <TextBlock Text="{Binding LoadCommand.IsBusy, StringFormat={}IsLoadCommandBusy: {0}}" />
                                                <TextBlock Text="{Binding UnloadCommand.IsBusy, StringFormat={}IsUnloadCommandBusy: {0}}" />
                                            </StackPanel>
                                        </Border>
                                    </DataTemplate>
                                </ContentControl.ContentTemplate>
                            </ContentControl>
                        </Grid>
                    </DockPanel>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:ProcessingImagesViewModel}">
                    <local:DragAndDrop />
                </DataTemplate>

                <DataTemplate DataType="{x:Type mvvm:FileSystemViewModel}">
                    <DockPanel>
                        <Menu DockPanel.Dock="Top">
                            <MenuItem Header="File">
                                <MenuItem Header="Open" />
                                <MenuItem Header="Delete" />
                                <MenuItem Header="Refresh" />
                                <MenuItem Header="Copy">
                                    <MenuItem Header="As File" />
                                    <MenuItem Header="As Path" />
                                </MenuItem>
                                <MenuItem Header="Move" />
                            </MenuItem>
                            <MenuItem Header="View">
                                <!--<MenuItem Command="{Binding Options.DisplayDetailsAsListCommand}" Header="As List" />
                                <MenuItem Command="{Binding Options.DisplayDetailsAsIconsCommand}" Header="As Icons" />-->
                            </MenuItem>
                            <MenuItem Header="Options" />
                            <MenuItem Header="Help">
                                <MenuItem Header="License" />
                                <MenuItem Header="Credits" />
                            </MenuItem>
                        </Menu>
                        <mvvm:FileSystemBrowser />
                    </DockPanel>
                </DataTemplate>


                <DataTemplate DataType="{x:Type local:PasswordViewModel}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="5" />
                            <RowDefinition Height="Auto" />
                        </Grid.RowDefinitions>

                        <GroupBox Grid.Row="0" Header="Password">
                            <Grid>

                                <PasswordBox x:Name="PasswordBox" PasswordChar="*">
                                    <i:Interaction.Behaviors>
                                        <mvvm:PasswordBindingBehavior ClearTextPassword="{Binding Password}" />
                                    </i:Interaction.Behaviors>
                                </PasswordBox>
                                <Button Margin="0,0,4,0"
                                        Padding="4,0"
                                        HorizontalAlignment="Right"
                                        Background="Transparent"
                                        BorderThickness="0"
                                        Content="X"
                                        ToolTip="Clear">
                                    <i:Interaction.Triggers>
                                        <i:EventTrigger EventName="Click">
                                            <mvvm:ClearPasswordBoxAction Target="{Binding ElementName=PasswordBox}" />
                                        </i:EventTrigger>
                                    </i:Interaction.Triggers>
                                    <Button.Style>
                                        <Style TargetType="{x:Type Button}">
                                            <Setter Property="Visibility" Value="Visible" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding Password}" Value="">
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding Password}" Value="{x:Null}">
                                                    <Setter Property="Visibility" Value="Hidden" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Button.Style>
                                </Button>
                            </Grid>
                        </GroupBox>

                        <GroupBox Grid.Row="2" Header="Clear text">
                            <TextBlock Text="{Binding Password}" />
                        </GroupBox>

                        <GroupBox Grid.Row="4" Header="Textbox with Watermark">
                            <TextBox Text="{Binding Password, Mode=OneWay}">
                                <i:Interaction.Behaviors>
                                    <mvvm:WatermarkBehavior Watermark="Search">
                                        <mvvm:WatermarkBehavior.WatermarkStyle>
                                            <Style TargetType="{x:Type TextBox}">
                                                <Setter Property="Foreground" Value="Red" />
                                            </Style>
                                        </mvvm:WatermarkBehavior.WatermarkStyle>
                                    </mvvm:WatermarkBehavior>
                                </i:Interaction.Behaviors>
                            </TextBox>
                        </GroupBox>
                    </Grid>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:ProgressViewModel}">
                    <DockPanel>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Unloaded">
                                <i:InvokeCommandAction Command="{Binding UnloadCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Loaded">
                                <i:InvokeCommandAction Command="{Binding LoadCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <StackPanel Margin="0,4" DockPanel.Dock="Top">
                            <CheckBox Content="Murder UI" IsChecked="{Binding Block}" />
                        </StackPanel>

                        <Button DockPanel.Dock="Bottom">
                            <Button.Style>
                                <Style TargetType="{x:Type Button}">
                                    <Setter Property="Content" Value="Refresh" />
                                    <Setter Property="Command" Value="{Binding RefreshCommand}" />
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding RefreshCommand.IsBusy}" Value="True">
                                            <Setter Property="Content" Value="Cancel" />
                                            <Setter Property="Command" Value="{Binding RefreshCommand.CancelCommand}" />
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <ProgressBar Maximum="{Binding Maximum, Mode=OneWay}" Value="{Binding Percentage, Mode=OneWay}">
                            <ProgressBar.Style>
                                <Style TargetType="{x:Type ProgressBar}">
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Trigger.EnterActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                         From="1.0"
                                                                         To="0.0"
                                                                         Duration="0:0:1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.EnterActions>
                                            <Trigger.ExitActions>
                                                <BeginStoryboard>
                                                    <Storyboard>
                                                        <DoubleAnimation Storyboard.TargetProperty="Opacity"
                                                                         From="0.0"
                                                                         To="1.0"
                                                                         Duration="0:0:1" />
                                                    </Storyboard>
                                                </BeginStoryboard>
                                            </Trigger.ExitActions>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ProgressBar.Style>
                        </ProgressBar>
                    </DockPanel>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:BusyViewModel}">
                    <TreeView ItemsSource="{Binding Items}">
                        <TreeView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Command="{Binding AddChildCommand}" Header="Add Child" />
                                <MenuItem Command="{Binding AddContainerCommand}" Header="Add Container" />
                            </ContextMenu>
                        </TreeView.ContextMenu>

                        <i:Interaction.Behaviors>
                            <mvvm:SelectedTreeViewItemBehavior SelectedItem="{Binding SelectedItem}" />
                        </i:Interaction.Behaviors>

                        <TreeView.Resources>

                            <Style BasedOn="{StaticResource {x:Type TreeViewItem}}" TargetType="{x:Type TreeViewItem}">
                                <Setter Property="Margin" Value="2" />
                            </Style>

                            <DataTemplate DataType="{x:Type local:ObservableBusyViewModel}">
                                <Border>
                                    <Border.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Command="{Binding BeBusyCommand}" Header="Be busy" />
                                        </ContextMenu>
                                    </Border.ContextMenu>
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="BorderThickness" Value="2" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsBusy}" Value="True">
                                                    <Setter Property="BorderBrush" Value="Red" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsBusy}" Value="False">
                                                    <Setter Property="BorderBrush" Value="Green" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBlock Text="{Binding}" />
                                </Border>
                            </DataTemplate>
                            <HierarchicalDataTemplate DataType="{x:Type local:BusyViewModel}" ItemsSource="{Binding Items}">
                                <Border>
                                    <Border.ContextMenu>
                                        <ContextMenu>
                                            <MenuItem Command="{Binding AddChildCommand}" Header="Add Child" />
                                            <MenuItem Command="{Binding AddContainerCommand}" Header="Add Container" />
                                        </ContextMenu>
                                    </Border.ContextMenu>
                                    <Border.Style>
                                        <Style TargetType="{x:Type Border}">
                                            <Setter Property="BorderThickness" Value="2" />
                                            <Style.Triggers>
                                                <DataTrigger Binding="{Binding IsBusy}" Value="True">
                                                    <Setter Property="BorderBrush" Value="Red" />
                                                </DataTrigger>
                                                <DataTrigger Binding="{Binding IsBusy}" Value="False">
                                                    <Setter Property="BorderBrush" Value="Green" />
                                                </DataTrigger>
                                            </Style.Triggers>
                                        </Style>
                                    </Border.Style>
                                    <TextBlock Text="{Binding}" />
                                </Border>
                            </HierarchicalDataTemplate>
                        </TreeView.Resources>
                    </TreeView>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:TextDisplayViewModel}">
                    <Grid>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <UniformGrid Columns="2" DockPanel.Dock="Top">
                            <Button Margin="2,0"
                                    Command="{Binding LoadCommand}"
                                    Content="Load" />

                            <Button Margin="2,0"
                                    Command="{Binding UnloadCommand}"
                                    Content="Unload" />
                        </UniformGrid>

                        <ListBox Grid.Row="1"
                                 ItemsSource="{Binding Items}"
                                 ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                 ScrollViewer.VerticalScrollBarVisibility="Auto"
                                 VirtualizingStackPanel.IsVirtualizing="True"
                                 VirtualizingStackPanel.VirtualizationMode="Recycling">

                            <ListBox.Template>
                                <ControlTemplate>
                                    <ScrollViewer>
                                        <ItemsPresenter />
                                    </ScrollViewer>
                                </ControlTemplate>
                            </ListBox.Template>

                            <ListBox.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <mvvm:VirtualizingTilePanel CanHorizontallyScroll="False"
                                                                CanVerticallyScroll="True"
                                                                ChildSize="50" />
                                </ItemsPanelTemplate>
                            </ListBox.ItemsPanel>

                            <ListBox.ItemContainerStyle>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="FocusVisualStyle" Value="{x:Null}" />
                                    <Setter Property="Focusable" Value="False" />
                                    <Setter Property="Height" Value="48" />
                                    <Setter Property="Margin" Value="0" />
                                    <Setter Property="Padding" Value="0" />
                                    <Setter Property="Width" Value="48" />
                                </Style>
                            </ListBox.ItemContainerStyle>

                            <ListBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type local:GeometryContainer}">
                                    <ContentControl>
                                        <ContentControl.Resources>
                                            <Path x:Key="PathTemplate"
                                                  Width="48"
                                                  Height="48"
                                                  Data="{Binding Value}"
                                                  Fill="Black"
                                                  Focusable="False" />
                                            <Button x:Key="ButtonTemplate"
                                                    Width="48"
                                                    Height="48"
                                                    Background="White"
                                                    BorderBrush="{x:Null}"
                                                    BorderThickness="0">
                                                <Path Width="48"
                                                      Height="48"
                                                      Data="{Binding Value}"
                                                      Fill="Purple"
                                                      Focusable="False" />
                                            </Button>
                                        </ContentControl.Resources>
                                        <ContentControl.Style>
                                            <Style TargetType="{x:Type ContentControl}">
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="Content" Value="{StaticResource ButtonTemplate}" />
                                                    </Trigger>
                                                    <Trigger Property="IsMouseOver" Value="False">
                                                        <Setter Property="Content" Value="{StaticResource PathTemplate}" />
                                                    </Trigger>
                                                </Style.Triggers>
                                            </Style>
                                        </ContentControl.Style>
                                    </ContentControl>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </DataTemplate>

                <DataTemplate DataType="{x:Type mvvm:GroupingViewModel}">
                    <Grid>
                        <Grid.Resources>
                            <mvvm:BindingProxy x:Key="DataContextProxy" Data="{Binding}" />
                        </Grid.Resources>

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Loaded">
                                <i:InvokeCommandAction Command="{Binding LoadCommand}" />
                            </i:EventTrigger>
                            <i:EventTrigger EventName="Unloaded">
                                <i:InvokeCommandAction Command="{Binding UnloadCommand}" />
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*" />
                            <ColumnDefinition Width="4" />
                            <ColumnDefinition Width="*" />
                        </Grid.ColumnDefinitions>

                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto" />
                            <RowDefinition Height="4" />
                            <RowDefinition Height="*" />
                        </Grid.RowDefinitions>

                        <ContentControl Grid.Row="0" Grid.RowSpan="3">
                            <ContentControl.Style>
                                <Style TargetType="{x:Type ContentControl}">
                                    <Setter Property="Content">
                                        <Setter.Value>
                                            <ListBox FocusVisualStyle="{x:Null}"
                                                     ItemsSource="{Binding Items}"
                                                     ScrollViewer.HorizontalScrollBarVisibility="Disabled"
                                                     SelectedItem="{Binding SelectedItem}">
                                                <ItemsControl.ItemTemplate>
                                                    <DataTemplate DataType="{x:Type mvvm:GroupsViewModel}">
                                                        <DockPanel MinWidth="150">
                                                            <Button Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                                                    Command="{Binding Data.AddCommand, Source={StaticResource DataContextProxy}}"
                                                                    Content="+"
                                                                    DockPanel.Dock="Right"
                                                                    ToolTip="Add" />

                                                            <Button Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                                                                    Command="{Binding Data.RemoveCommand, Source={StaticResource DataContextProxy}}"
                                                                    CommandParameter="{Binding}"
                                                                    Content="-"
                                                                    DockPanel.Dock="Right"
                                                                    ToolTip="Remove" />

                                                            <ComboBox ItemsSource="{Binding Items}" SelectedItem="{Binding SelectedItem}">
                                                                <ComboBox.ItemTemplate>
                                                                    <DataTemplate DataType="{x:Type mvvm:GroupViewModel}">
                                                                        <TextBlock Text="{Binding Name}" />
                                                                    </DataTemplate>
                                                                </ComboBox.ItemTemplate>
                                                            </ComboBox>
                                                        </DockPanel>
                                                    </DataTemplate>
                                                </ItemsControl.ItemTemplate>
                                                <ItemsControl.ItemsPanel>
                                                    <ItemsPanelTemplate>
                                                        <WrapPanel />
                                                    </ItemsPanelTemplate>
                                                </ItemsControl.ItemsPanel>
                                            </ListBox>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Count}" Value="0">
                                            <Setter Property="Content">
                                                <Setter.Value>
                                                    <Button Grid.Column="0"
                                                            Padding="10"
                                                            HorizontalAlignment="Center"
                                                            VerticalAlignment="Center"
                                                            Command="{Binding AddCommand}"
                                                            Content="+"
                                                            ToolTip="Add" />
                                                </Setter.Value>
                                            </Setter>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ContentControl.Style>
                        </ContentControl>

                        <TextBlock Grid.Row="0"
                                   Grid.Column="2"
                                   Text="Group by:" />

                        <ItemsControl Grid.Row="2"
                                      Grid.Column="2"
                                      ItemsSource="{Binding Items}">
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type mvvm:GroupsViewModel}">
                                    <TextBlock Text="{Binding SelectedItem.GroupDescription.PropertyName}" />
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </Grid>
                </DataTemplate>

                <DataTemplate DataType="{x:Type local:DialogViewModel}">
                    <Grid>
                        <Grid.Resources>
                            <mvvm:BindingProxy x:Key="DataContextProxy" Data="{Binding}" />
                            <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />

                            <DataTemplate DataType="{x:Type incubator:BoolDialogResultViewModel}">
                                <Grid Background="#cccccccc" Visibility="{Binding IsOpen, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="*" />
                                        <ColumnDefinition Width="Auto" />
                                        <ColumnDefinition Width="*" />
                                    </Grid.ColumnDefinitions>

                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="*" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="4" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="4" />
                                        <RowDefinition Height="Auto" />
                                        <RowDefinition Height="*" />
                                    </Grid.RowDefinitions>

                                    <TextBlock Grid.Row="1"
                                               Grid.Column="1"
                                               Text="Dialog open" />
                                    <Button Grid.Row="3"
                                            Grid.Column="1"
                                            Padding="10"
                                            Command="{Binding CloseCommand}"
                                            Content="Close" />

                                    <Button Grid.Row="5"
                                            Grid.Column="1"
                                            Padding="10"
                                            Command="{Binding Data.RunCommand.CancelCommand, Source={StaticResource DataContextProxy}}"
                                            Content="Cancel" />
                                </Grid>
                            </DataTemplate>
                        </Grid.Resources>

                        <ToggleButton x:Name="DialogToggle"
                                      Padding="10"
                                      HorizontalAlignment="Center"
                                      VerticalAlignment="Center"
                                      Command="{Binding RunCommand}"
                                      Content="Open Dialog"
                                      IsChecked="{Binding DialogResult.IsOpen, Mode=OneWay}" />

                        <Popup MinWidth="350"
                               MinHeight="325"
                               AllowsTransparency="True"
                               IsOpen="{Binding DialogResult.IsOpen, Mode=OneWay}"
                               Placement="Bottom"
                               PlacementTarget="{Binding ElementName=DialogToggle}"
                               StaysOpen="True">
                            <i:Interaction.Behaviors>
                                <mvvm:AutoRepositionPopupBehavior />
                            </i:Interaction.Behaviors>

                            <Border Background="DarkGray">
                                <Border.Effect>
                                    <DropShadowEffect />
                                </Border.Effect>
                                <ContentControl Content="{Binding DialogResult}" />
                            </Border>
                        </Popup>
                    </Grid>
                </DataTemplate>
            </ContentControl.Resources>
        </ContentControl>
    </Grid>
</Window>
